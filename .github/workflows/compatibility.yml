name: Compatibility

on:
  create:
    tags: ['*']
  push:
    branches: ['master']
  schedule:
  - cron: 0 23 * * *
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service_version: ["ALL_LATEST=true"]
        async_redis_implementation: ["coredis"]
        marker: [not integration]
        include:
          - service_version: "LIMITS_REDIS_SERVER_SSL_VERSION=7.4"
            marker: "redis or redis_cluster"
          - service_version: "LIMITS_REDIS_SERVER_SSL_VERSION=7.2"
            marker: "redis or redis_cluster"
          - service_version: "LIMITS_REDIS_SERVER_SSL_VERSION=7.0"
            marker: "redis or redis_cluster"
          - service_version: "LIMITS_REDIS_SERVER_SSL_VERSION=6.2.6"
            marker: "redis or redis_cluster"
          - service_version: "LIMITS_REDIS_SERVER_VERSION=7.4"
            marker: "redis or redis_cluster"
          - service_version: "LIMITS_REDIS_SERVER_VERSION=7.4"
            async_redis_implementation: "redispy"
            marker: "redis or redis_cluster"
          - service_version: "LIMITS_REDIS_SERVER_VERSION=7.2"
            marker: "redis or redis_cluster"
          - service_version: "LIMITS_REDIS_SERVER_VERSION=7.0"
            marker: "redis or redis_cluster"
          - service_version: "LIMITS_REDIS_SERVER_VERSION=6.2.6"
            marker: "redis or redis_cluster"
          - service_version: "LIMITS_REDIS_SENTINEL_SERVER_VERSION=7.2"
            marker: "redis_sentinel"
          - service_version: "LIMITS_REDIS_SENTINEL_SERVER_VERSION=7.2"
            marker: "redis_sentinel"
            async_redis_implementation: "redispy"
          - service_version: "LIMITS_REDIS_SENTINEL_SERVER_VERSION=7.0"
            marker: "redis_sentinel"
          - service_version: "LIMITS_REDIS_SENTINEL_SERVER_VERSION=6.2.6"
            marker: "redis_sentinel"
          - service_version: "LIMITS_MONGODB_SERVER_VERSION=8.0"
            marker: "mongodb"
          - service_version: "LIMITS_MONGODB_SERVER_VERSION=7.0"
            marker: "mongodb"
          - service_version: "LIMITS_MONGODB_SERVER_VERSION=6.0"
            marker: "mongodb"
          - service_version: "LIMITS_MONGODB_SERVER_VERSION=5.0"
            marker: "mongodb"
          - service_version: "LIMITS_MEMCACHED_SERVER_VERSION=1.6.15"
            marker: "memcached"
          - service_version: "LIMITS_MEMCACHED_SERVER_VERSION=1.6.6"
            marker: "memcached"
          - service_version: "LIMITS_MEMCACHED_SERVER_VERSION=1.5.16"
            marker: "memcached"
          - service_version: "LIMITS_MEMCACHED_SERVER_VERSION=1.4.34"
            marker: "memcached"
          - service_version: "LIMITS_ETCD_SERVER_VERSION=3.5"
            marker: "etcd"
          - service_version: "LIMITS_ETCD_SERVER_VERSION=3.4"
            marker: "etcd"
          - service_version: "LIMITS_ETCD_SERVER_VERSION=3.3"
            marker: "etcd"
          - service_version: "LIMITS_VALKEY_SERVER_VERSION=7.2"
            marker: "valkey"
          - service_version: "LIMITS_VALKEY_SERVER_VERSION=8.0"
            marker: "valkey"

    steps:
    - uses: actions/checkout@v4
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/**') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install -U setuptools wheel
        pip install --no-binary protobuf -r requirements/ci.txt
    - name: Tests
      env:
        CI: "True"
        ASYNC_REDIS_IMPLEMENTATION: "${{ matrix.async_redis_implementation }}"
      run: |
        eval "export ${{ matrix.service_version }}"
        py.test -m "${{ matrix.marker }} and not benchmark" --cov-report=xml --cov-branch --max-runs=3
