PATH := ./redis-git/src:${PATH}

ifneq ("$(wildcard ./google-cloud-sdk/platform/google_appengine/VERSION)","")
GAE_INSTALLED = 1
else
GAE_INSTALLED = 0
endif

PY_VERSION =$(shell python -c "import sys;print('.'.join(str(k) for k in sys.version_info[0:2]))")

clean:
	-rm -f MANIFEST
	-rm -rf dist/
	-rm -rf build/

cleancov:
	-rm -rf htmlcov/
	-coverage combine
	-coverage erase

cleanmeta:
	-rm -rf limits.egg-info/

cleanall: clean cleancov cleanmeta
	-find . -type f -name "*~" -exec rm -f "{}" \;
	-find . -type f -name "*.orig" -exec rm -f "{}" \;
	-find . -type f -name "*.rej" -exec rm -f "{}" \;
	-find . -type f -name "*.pyc" -exec rm -f "{}" \;
	-find . -type f -name "*.parse-index" -exec rm -f "{}" \;

sdist: cleanmeta
	python setup.py sdist

bdist: cleanmeta
	python setup.py bdist_egg

install:
	python setup.py install

redis-start: redis-cleanup
	./redis-git/src/redis-server tests/redis-configurations/unixdomainsocket.conf
	./redis-git/src/redis-server tests/redis-configurations/cluster/redis-0.conf
	./redis-git/src/redis-server tests/redis-configurations/cluster/redis-1.conf
	./redis-git/src/redis-server tests/redis-configurations/cluster/redis-2.conf
	./redis-git/src/redis-server tests/redis-configurations/cluster/redis-3.conf
	./redis-git/src/redis-server tests/redis-configurations/cluster/redis-4.conf
	./redis-git/src/redis-server tests/redis-configurations/cluster/redis-5.conf
	./redis-git/src/redis-server tests/redis-configurations/sentinel/redis-master.conf
	./redis-git/src/redis-server tests/redis-configurations/sentinel/redis-slave.conf
	./redis-git/src/redis-server tests/redis-configurations/sentinel/redis-sentinel.conf --sentinel

	echo "yes" | ./redis-git/src/redis-cli --cluster create --cluster-replicas 1 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005
	sleep 5

redis-cleanup:
	- rm -vf /tmp/redis_cluster_node*.conf 2>/dev/null
	- rm dump.rdb appendonly.aof - 2>/dev/null

redis-stop:
	[ -e /tmp/redis_cluster_node0.pid ] && kill `cat /tmp/redis_cluster_node0.pid` || true
	[ -e /tmp/redis_cluster_node1.pid ] && kill `cat /tmp/redis_cluster_node1.pid` || true
	[ -e /tmp/redis_cluster_node2.pid ] && kill `cat /tmp/redis_cluster_node2.pid` || true
	[ -e /tmp/redis_cluster_node3.pid ] && kill `cat /tmp/redis_cluster_node3.pid` || true
	[ -e /tmp/redis_cluster_node4.pid ] && kill `cat /tmp/redis_cluster_node4.pid` || true
	[ -e /tmp/redis_cluster_node5.pid ] && kill `cat /tmp/redis_cluster_node5.pid` || true
	[ -e /tmp/redis-sentinel.pid ] && kill `cat /tmp/redis-sentinel.pid` || true
	[ -e /tmp/redis-master.pid ] && kill `cat /tmp/redis-master.pid` || true
	[ -e /tmp/redis-slave.pid ] && kill `cat /tmp/redis-slave.pid` || true
	[ -e /tmp/redis_unix-domain-socket.pid] && kill `cat /tmp/redis_unix-domain-socket.pid` || true
	rm -f /tmp/redis_cluster_node0.conf
	rm -f /tmp/redis_cluster_node1.conf
	rm -f /tmp/redis_cluster_node2.conf
	rm -f /tmp/redis_cluster_node3.conf
	rm -f /tmp/redis_cluster_node4.conf
	rm -f /tmp/redis_cluster_node5.conf

redis-install:
	[ ! -e redis-git/.git ] && git clone --depth 1 --branch 5.0 https://github.com/antirez/redis.git redis-git || true
	make -C redis-git -j4
	gem install redis
	sleep 3

memcached-start:
	memcached -d -p 22122 -P /tmp/limits.memcached.1.pid
	memcached -d -p 22123 -P /tmp/limits.memcached.2.pid
	memcached -d -s /tmp/limits.memcached.sock -P /tmp/limits.memcached.uds.pid

memcached-stop:
	[ -e /tmp/limits.memcached.1.pid ] && kill `cat /tmp/limits.memcached.1.pid` || true
	[ -e /tmp/limits.memcached.2.pid ] && kill `cat /tmp/limits.memcached.2.pid` || true
	[ -e /tmp/limits.memcached.uds.pid ] && kill `cat /tmp/limits.memcached.uds.pid` || true
	rm -rf /tmp/limits.memcached.*.pid

memcached-gae-install:
ifeq ($(PY_VERSION),2.7)
ifeq ($(GAE_INSTALLED),0)
	export CLOUDSDK_PYTHON=$$(which python)
	wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-167.0.0-linux-x86_64.tar.gz -P /var/tmp/;
	rm -rf google-cloud-sdk
	tar -xzf /var/tmp/google-cloud-sdk-167.0.0-linux-x86_64.tar.gz
	yes Y | google-cloud-sdk/bin/gcloud components install app-engine-python
else
	echo "GAE SDK already setup"
endif
	ln -sf google-cloud-sdk/platform/google_appengine/google google
endif

memcached-gae-clean:
	rm google-cloud-sdk-167.0.0-linux-x86_64.tar.gz
	rm -r google-cloud-sdk

tests: redis-stop memcached-stop redis-install redis-start memcached-gae-install memcached-start
	nosetests tests --with-cov -v --with-timer --timer-top-n 10

.PHONY: test
